<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Main_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="A very light version of a framework for implementations. Additionally, you can use this as a repetitive subcomponent of your process due to the small footprint. Regardless of your choice, you will need to change just a few things in order to get started. &#xA;&#xA;Where to look for changes:&#xA; - Change the Variable Type for &lt;tranzactionItem&gt; and &lt;tranzactionItems&gt; to suit your needs. Make sure the latter is an array of the former, otherwise additional changes will be required.&#xA;- Fill in the actual process steps in these files - LoginApp1.xaml, Process.xaml, KillAllProcesses.xaml and, optionally HandleErrorsApp1.xaml.&#xA;- Add process specific settings in the Config file, then grab them from the &lt;config&gt; variable in order to pass them as arguments mainly to Process.xaml." DisplayName="[RPAbox] LightLoopingFramework" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="tranzactionNumber" />
      <Variable x:TypeArguments="x:Object" Name="tranzactionItem" />
      <Variable x:TypeArguments="s:Object[]" Name="tranzactionItems" />
      <Variable x:TypeArguments="ui:GenericValue" Name="retryCounter" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="config" />
      <Variable x:TypeArguments="x:String" Name="usernameApp1" />
      <Variable x:TypeArguments="ss:SecureString" Name="passwordApp1" />
    </Sequence.Variables>
    <Sequence DisplayName="init" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="grab any configuration in here, including credentials" DisplayName="Invoke InitAllSettings workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Utils\InitAllSettings.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Config.xlsx</InArgument>
          <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[config]</OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_UsernameApp1">[usernameApp1]</OutArgument>
          <OutArgument x:TypeArguments="ss:SecureString" x:Key="out_PasswordApp1">[passwordApp1]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="this is optional depending on your approach, but you should make sure you are starting clean" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Utils\KillAllProcesses.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke LoginApp1 workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="App1\LoginApp1.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_usernameApp1">[usernameApp1]</InArgument>
          <InArgument x:TypeArguments="ss:SecureString" x:Key="in_passwordApp1">[passwordApp1]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <Sequence DisplayName="process related initialisations" sap2010:WorkflowViewState.IdRef="Sequence_15">
        <Assign DisplayName="Assign retryCounter" sap2010:WorkflowViewState.IdRef="Assign_6">
          <Assign.To>
            <OutArgument x:TypeArguments="ui:GenericValue">[retryCounter]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="ui:GenericValue">[cint(config("MaxRetryAttempts").ToString)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign tranzactionItem" sap2010:WorkflowViewState.IdRef="Assign_3">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Object">[tranzactionItem]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Object">[Nothing]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign tranzactionNumber" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[tranzactionNumber]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">1</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
    </Sequence>
    <While DisplayName="While got tranzaction items" sap2010:WorkflowViewState.IdRef="While_1" Condition="[tranzactionNumber &lt;= tranzactionItems.Count]">
      <TryCatch DisplayName="Try process tranzaction item" sap2010:WorkflowViewState.IdRef="TryCatch_1">
        <TryCatch.Try>
          <Sequence DisplayName="process tranzaction item" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;processing [item #&quot; + tranzactionNumber.ToString + &quot; retry #&quot; + retryCounter.ToString + &quot;] with contents &lt;&quot;]" />
            <Sequence sap2010:Annotation.AnnotationText="optionally, here you could invoke a workflow that does this job, especially if it's a complex one" DisplayName="prepare tranzaction" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <Assign DisplayName="Assign tranzactionItem" sap2010:WorkflowViewState.IdRef="Assign_12">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[tranzactionItem]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">[tranzactionItems(tranzactionNumber - 1)]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="actual processing of the tranzaction" DisplayName="process tranzaction" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Process workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Process.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="take any action related to a succesfully processed item. make sure you don't have errors here, or that you are encapsulating them properly" DisplayName="processed succesfuly" sap2010:WorkflowViewState.IdRef="Sequence_12">
              <Sequence DisplayName="additional success actions" sap2010:WorkflowViewState.IdRef="Sequence_13" />
              <Assign DisplayName="reset retryCounter" sap2010:WorkflowViewState.IdRef="Assign_7">
                <Assign.To>
                  <OutArgument x:TypeArguments="ui:GenericValue">[retryCounter]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="ui:GenericValue">[cint(config("MaxRetryAttempts").ToString)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="inc tranzactionNumber" sap2010:WorkflowViewState.IdRef="Assign_5">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[tranzactionNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[tranzactionNumber + 1]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_1">
            <ActivityAction x:TypeArguments="ui:BusinessRuleException">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
              </ActivityAction.Argument>
              <Sequence DisplayName="handle BusinessRuleException" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[&quot;BUSINESS EXCEPTION   &lt;&quot; + exception.Source + &quot;&gt; &lt;&quot; + exception.Message + &quot;&gt; &lt;&quot; + exception.StackTrace + &quot;&gt;&quot;]" />
                <Assign DisplayName="inc tranzactionNumber" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[tranzactionNumber]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[tranzactionNumber + 1]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </Catch>
          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Sequence DisplayName="handle Application Exception" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[&quot;APPLICATION EXCEPTION   &lt;&quot; + exception.Source + &quot;&gt; &lt;&quot; + exception.Message + &quot;&gt; &lt;&quot; + exception.StackTrace + &quot;&gt;&quot;]" />
                <If Condition="[retryCounter &gt; 0]" DisplayName="If got retries" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Then>
                    <Sequence DisplayName="retries available" sap2010:WorkflowViewState.IdRef="Sequence_6">
                      <Assign DisplayName="dec retryCounter" sap2010:WorkflowViewState.IdRef="Assign_9">
                        <Assign.To>
                          <OutArgument x:TypeArguments="ui:GenericValue">[retryCounter]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="ui:GenericValue">[retryCounter - 1]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="retries exhausted" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="item FAILED! retry attempts exhausted, aborting item" />
                      <Assign DisplayName="inc tranzactionNumber" sap2010:WorkflowViewState.IdRef="Assign_11">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[tranzactionNumber]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[tranzactionNumber + 1]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="reset retryCounter" sap2010:WorkflowViewState.IdRef="Assign_10">
                        <Assign.To>
                          <OutArgument x:TypeArguments="ui:GenericValue">[retryCounter]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="ui:GenericValue">[cint(config("MaxRetryAttempts").ToString)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke TakeScreenshot workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Utils\TakeScreenshot.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Folder">C:\Users\tudor rpabox\Desktop\screenshots</InArgument>
                    <InOutArgument x:TypeArguments="x:String" x:Key="io_FilePath" />
                    <InArgument x:TypeArguments="x:String" x:Key="in_filenamePrefix">screenshotApp1</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <TryCatch sap2010:Annotation.AnnotationText="here you can handle errors and/or simply relogin into the application (assuming that you are also closing it)" DisplayName="Try to recover to a known state" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                  <TryCatch.Try>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke HandleErrorsApp1 workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="App1\HandleErrorsApp1.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="restart app" sap2010:WorkflowViewState.IdRef="Sequence_14">
                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Warn" Message="[&quot;FAILED to recover gracefuly, restarting app.. &lt;&quot; + exception.Source + &quot;&gt; &lt;&quot; + exception.Message + &quot;&gt; &lt;&quot; + exception.StackTrace + &quot;&gt;&quot;]" />
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="make sure you close the app, don't just reopen it" DisplayName="Invoke LoginApp1 workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="App1\LoginApp1.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_usernameApp1">[usernameApp1]</InArgument>
                              <InArgument x:TypeArguments="ss:SecureString" x:Key="in_passwordApp1">[passwordApp1]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
    </While>
    <Sequence sap2010:Annotation.AnnotationText="you might want to perform cleanup, send an email or update a report now that the process has finished successfuly" DisplayName="finish successfuly" sap2010:WorkflowViewState.IdRef="Sequence_11" />
    <sads:DebugSymbol.Symbol>d1tDOlxVc2Vyc1x0dWRvciBycGFib3hcRGVza3RvcFxyYW5kb20gc3R1ZmZcaGFja2F0aG9uIGF1Z3VzdFxMaWdodExvb3BpbmdGcmFtZXdvcmtcTWFpbi54YW1sVUIDjgIOAgEBTAV7EAIBVXwFiwINAgEDjAIFjAL2AQIBAk0HVR8CAWxWB1ofAgFqWwdgHwIBZGEHehICAVZ9B4oCEgIBBXxqfJwBAgEEUkxSWgIBdFNTU2ECAXJRYFFoAgFwTZgCTbQCAgFvUExQZwIBbk9IT1MCAW1WwAJW3QICAWteUV5fAgFoXUpdWAIBZlu4AVvNAQIBZWIJaRICAV9qCXESAgFbcgl5EgIBV38LpQEWAgE8rQEPtwEaAgE0vwEPhgIaAgEGZztnZgIBYmQ8ZEoCAWBvNG89AgFebDVsRgIBXHczdzQCAVp0NHRHAgFYgAENgAGOAgIBU4EBDYoBGAIBTIsBDZEBGAIBSZIBDaQBGAIBPa4BEa4BrAICATqvARG2ARoCATXAARHAAa8CAgEvwQER4wEWAgEa5AER6gEpAgEW6wERhQIcAgEHgAF6gAGLAgIBVIIBD4kBGAIBTYwBD5ABJwIBSpMBD5MBcgIBSJQBD5sBGAIBQ5wBD6MBGAIBPq4Bf64BqQICATu0ATu0AVICATixATyxAU8CATbAAX/AAawCAgEwwQEfwQE2AgEbwwEVzAEgAgEpzwEV4QEgAgEc6AFW6AFkAgEZ5gFO5gF3AgEY5AHHAeQB4gECARftARXxAS0CART5ARmBAiQCAQiHATqHAWMCAVCEATuEAUwCAU6MAb4BjAHMAQIBS5kBQZkBbAIBRpYBQpYBUAIBRKEBOaEBUAIBQZ4BOp4BTQIBP8QBF8sBIAIBKtABF9ABvgECASfRARfYASACASLZARfgASACAR3tAc0B7QHpAQIBFfoBG/oBzgICAQ/7ARuAAjMCAQnJAUnJAVsCAS3GAUrGAVgCASvQAYUB0AG7AQIBKNYBQdYBWAIBJdMBQtMBVQIBI94BSd4BdAIBINsBStsBWAIBHvoBiAH6AcsCAgEQ/gFl/gFzAgEN/QFe/QFsAgEL+wGiAvsBtwICAQo=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="313.6,132">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="313.6,132">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="313.6,88" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="243.2,60.8" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="243.2,60.8" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="243.2,60.8" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="313.6,387.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="694.4,984">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="336,92.8" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="243.2,60.8" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="336,245.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_6" sap:VirtualizedContainerService.HintSize="313.6,88" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="336,240.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="243.2,100.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="243.2,60.8" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="243.2,60.8" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="336,503.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="358.4,1326.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="313.6,92.8" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="313.6,60.8" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="336,318.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="654.4,388.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="625.6,92.8" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="243.2,60.8" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="265.6,185.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="313.6,92.8" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="313.6,60.8" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="313.6,60.8" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="336,419.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="625.6,569.6" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="625.6,88" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_7" sap:VirtualizedContainerService.HintSize="313.6,88" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="313.6,92.8" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="313.6,116">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="336,372.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="403.2,443.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="625.6,888.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="648,1883.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="654.4,1953.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="668.8,3984" />
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="694.4,4144" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="694.4,192.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="716.8,5696.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="756.8,5776.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>